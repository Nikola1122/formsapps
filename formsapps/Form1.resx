<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>